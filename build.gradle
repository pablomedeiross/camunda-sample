plugins {
	id 'java'
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.springframework.experimental.aot' version '0.9.1'
}

group = 'com.order'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext {
	camundaVersion = '7.15.0'
	springCloudVersion = '2020.0.2'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url "https://repo.spring.io/release" }
	mavenCentral()
}

dependencies {
	implementation "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-rest:${camundaVersion}"
	implementation "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-webapp:${camundaVersion}"
	implementation "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-test:${camundaVersion}"
	implementation "org.camunda.bpm:camunda-engine-plugin-spin:${camundaVersion}"
	implementation "org.camunda.spin:camunda-spin-dataformat-all:1.10.1"
	implementation 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner:3.0.2'
}

test {
	useJUnitPlatform()
}

bootBuildImage {
	builder = 'paketobuildpacks/builder:tiny'
	environment = ['BP_NATIVE_IMAGE': 'true']
}